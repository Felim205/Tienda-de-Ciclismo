/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bicis.test.ui.UI;

import bicis.test.ui.DetalleFactura;
import bicis.test.ui.UI.MenuPrincipal;
import bicis.test.ui.Utilidades;
import java.awt.Color;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import bicis.test.ui.Facturación;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/*
* Constructor de la clase Facturacion.
* Inicializa los componentes de la interfaz y configura la tabla de detalles.
*/
public class Facturacion extends javax.swing.JFrame {
    private List<DetalleFactura> detalles = new ArrayList<>();
    private DefaultTableModel modeloTabla;

    /**
     * Creates new form MenuPrincipal
     */

    public Facturacion() {
        initComponents();
        configurarTablaDetalles();
        
        //El array de los JLabels
        JLabel[] labels = {LogoCicloTEC, FacturacionLogo,FondoFactura,
        FondoCliente,FondoSubtotal,FondoImpuesto,FondoTotal};
        
        //Ponerle color JLabel del fondo (Gris Oscuro)
        Color col = new Color(152, 151, 153);
        getContentPane().setBackground(col);
        
        //Nuevo código para ajustar muchos JLabels usando arrays!
        for (JLabel label : labels){
            Utilidades.imageStretcher(label);
        }
        
        //Activar esta línea hasta el final
        Utilidades.setCustomIcon(this, "images/CicloTEC Logo.png");
    }
    
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LogoCicloTEC = new javax.swing.JLabel();
        Registro = new javax.swing.JLabel();
        FacturacionLogo = new javax.swing.JLabel();
        Linea = new javax.swing.JLabel();
        LineaHorizontal1 = new javax.swing.JLabel();
        LineaHorizontal2 = new javax.swing.JLabel();
        Back = new javax.swing.JButton();
        Buscar = new javax.swing.JButton();
        AgregarDetalle = new javax.swing.JButton();
        Modificar = new javax.swing.JButton();
        NoFactura = new javax.swing.JLabel();
        Cliente = new javax.swing.JLabel();
        FechaRec = new javax.swing.JLabel();
        Estado = new javax.swing.JLabel();
        Subtotal = new javax.swing.JLabel();
        Impuesto = new javax.swing.JLabel();
        Total = new javax.swing.JLabel();
        Detalle = new javax.swing.JLabel();
        TextFieldCliente = new javax.swing.JTextField();
        ComboBoxEstado = new javax.swing.JComboBox<>();
        TextoSubtotal = new javax.swing.JLabel();
        TextoImpuesto = new javax.swing.JLabel();
        Texto1 = new javax.swing.JLabel();
        FondoCliente = new javax.swing.JLabel();
        FondoSubtotal = new javax.swing.JLabel();
        FondoImpuesto = new javax.swing.JLabel();
        TextFieldNumero = new javax.swing.JTextField();
        FondoFactura = new javax.swing.JLabel();
        FondoTotal = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        Agregar = new javax.swing.JButton();
        TextFieldRecibido = new javax.swing.JTextField();
        FondoRecibido = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro de Facturación - CicloTEC");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(690, 500));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LogoCicloTEC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/CicloTEC (Tienda).png"))); // NOI18N
        LogoCicloTEC.setText("jLabel4");
        getContentPane().add(LogoCicloTEC, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 140, 100));

        Registro.setFont(new java.awt.Font("Segoe UI Semibold", 1, 32)); // NOI18N
        Registro.setForeground(new java.awt.Color(51, 51, 51));
        Registro.setText("Facturación");
        getContentPane().add(Registro, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        FacturacionLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Logo Facturación.png"))); // NOI18N
        getContentPane().add(FacturacionLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, 60, 60));

        Linea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Línea Vertical.png"))); // NOI18N
        getContentPane().add(Linea, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 10, 390));

        LineaHorizontal1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Línea Horizontal.png"))); // NOI18N
        getContentPane().add(LineaHorizontal1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 160, -1));

        LineaHorizontal2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Línea Horizontal.png"))); // NOI18N
        getContentPane().add(LineaHorizontal2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 160, -1));

        Back.setBackground(new java.awt.Color(217, 217, 217));
        Back.setForeground(new java.awt.Color(51, 51, 51));
        Back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Arrow Curved - Left.png"))); // NOI18N
        Back.setBorderPainted(false);
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        getContentPane().add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 50, 50));

        Buscar.setBackground(new java.awt.Color(217, 217, 217));
        Buscar.setFont(new java.awt.Font("Segoe UI Semibold", 0, 20)); // NOI18N
        Buscar.setForeground(new java.awt.Color(51, 51, 51));
        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });
        getContentPane().add(Buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 460, 130, 40));

        AgregarDetalle.setBackground(new java.awt.Color(217, 217, 217));
        AgregarDetalle.setFont(new java.awt.Font("Segoe UI Semibold", 0, 20)); // NOI18N
        AgregarDetalle.setForeground(new java.awt.Color(51, 51, 51));
        AgregarDetalle.setText("AgregarDetalle");
        AgregarDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarDetalleActionPerformed(evt);
            }
        });
        getContentPane().add(AgregarDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 410, 170, 30));

        Modificar.setBackground(new java.awt.Color(217, 217, 217));
        Modificar.setFont(new java.awt.Font("Segoe UI Semibold", 0, 20)); // NOI18N
        Modificar.setForeground(new java.awt.Color(51, 51, 51));
        Modificar.setText("Anular");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });
        getContentPane().add(Modificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 460, 130, 40));

        NoFactura.setFont(new java.awt.Font("Segoe UI Semibold", 1, 22)); // NOI18N
        NoFactura.setForeground(new java.awt.Color(51, 51, 51));
        NoFactura.setText("No. Factura:");
        getContentPane().add(NoFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 40, -1, -1));

        Cliente.setFont(new java.awt.Font("Segoe UI Semibold", 1, 22)); // NOI18N
        Cliente.setForeground(new java.awt.Color(51, 51, 51));
        Cliente.setText("Cliente:");
        getContentPane().add(Cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, -1, -1));

        FechaRec.setFont(new java.awt.Font("Segoe UI Semibold", 1, 22)); // NOI18N
        FechaRec.setForeground(new java.awt.Color(51, 51, 51));
        FechaRec.setText("Fecha de Recibido:");
        getContentPane().add(FechaRec, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, -1, -1));

        Estado.setFont(new java.awt.Font("Segoe UI Semibold", 1, 22)); // NOI18N
        Estado.setForeground(new java.awt.Color(51, 51, 51));
        Estado.setText("Estado:");
        getContentPane().add(Estado, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, -1, -1));

        Subtotal.setFont(new java.awt.Font("Segoe UI Semibold", 1, 22)); // NOI18N
        Subtotal.setForeground(new java.awt.Color(51, 51, 51));
        Subtotal.setText("Subtotal:");
        getContentPane().add(Subtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, -1, -1));

        Impuesto.setFont(new java.awt.Font("Segoe UI Semibold", 1, 22)); // NOI18N
        Impuesto.setForeground(new java.awt.Color(51, 51, 51));
        Impuesto.setText("Impuesto:");
        getContentPane().add(Impuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 240, -1, -1));

        Total.setFont(new java.awt.Font("Segoe UI Semibold", 1, 22)); // NOI18N
        Total.setForeground(new java.awt.Color(51, 51, 51));
        Total.setText("Total:");
        getContentPane().add(Total, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 280, -1, -1));

        Detalle.setFont(new java.awt.Font("Segoe UI Semibold", 1, 22)); // NOI18N
        Detalle.setForeground(new java.awt.Color(51, 51, 51));
        Detalle.setText("Detalle:");
        getContentPane().add(Detalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 320, -1, -1));

        TextFieldCliente.setBackground(new java.awt.Color(217, 217, 217));
        TextFieldCliente.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        TextFieldCliente.setForeground(new java.awt.Color(51, 51, 51));
        TextFieldCliente.setBorder(null);
        TextFieldCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldClienteActionPerformed(evt);
            }
        });
        getContentPane().add(TextFieldCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 80, 210, 20));

        ComboBoxEstado.setBackground(new java.awt.Color(217, 217, 217));
        ComboBoxEstado.setForeground(new java.awt.Color(51, 51, 51));
        ComboBoxEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Válido", "Anulado" }));
        getContentPane().add(ComboBoxEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, 330, 30));

        TextoSubtotal.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        TextoSubtotal.setText("...");
        getContentPane().add(TextoSubtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 200, -1, -1));

        TextoImpuesto.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        TextoImpuesto.setText("...");
        getContentPane().add(TextoImpuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 240, -1, -1));

        Texto1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Texto1.setText("...");
        getContentPane().add(Texto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 280, -1, -1));

        FondoCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Campo a llenar.png"))); // NOI18N
        getContentPane().add(FondoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 220, 30));

        FondoSubtotal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Campo a llenar.png"))); // NOI18N
        getContentPane().add(FondoSubtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, 320, 30));

        FondoImpuesto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Campo a llenar.png"))); // NOI18N
        getContentPane().add(FondoImpuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, 310, 30));

        TextFieldNumero.setBackground(new java.awt.Color(217, 217, 217));
        TextFieldNumero.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        TextFieldNumero.setForeground(new java.awt.Color(51, 51, 51));
        TextFieldNumero.setBorder(null);
        TextFieldNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldNumeroActionPerformed(evt);
            }
        });
        getContentPane().add(TextFieldNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 180, 30));

        FondoFactura.setForeground(new java.awt.Color(51, 51, 51));
        FondoFactura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Campo a llenar.png"))); // NOI18N
        getContentPane().add(FondoFactura, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, 190, 40));

        FondoTotal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Campo a llenar.png"))); // NOI18N
        getContentPane().add(FondoTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 350, 30));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "CodigoArticulo", "Cantidad", "PrecioUnitario", "Total"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, 340, 80));

        Agregar.setBackground(new java.awt.Color(217, 217, 217));
        Agregar.setFont(new java.awt.Font("Segoe UI Semibold", 0, 20)); // NOI18N
        Agregar.setForeground(new java.awt.Color(51, 51, 51));
        Agregar.setText("Agregar");
        Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarActionPerformed(evt);
            }
        });
        getContentPane().add(Agregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 460, 130, 40));

        TextFieldRecibido.setBackground(new java.awt.Color(217, 217, 217));
        TextFieldRecibido.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        TextFieldRecibido.setForeground(new java.awt.Color(51, 51, 51));
        TextFieldRecibido.setBorder(null);
        TextFieldRecibido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldRecibidoActionPerformed(evt);
            }
        });
        getContentPane().add(TextFieldRecibido, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 120, 210, 20));

        FondoRecibido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Campo a llenar.png"))); // NOI18N
        getContentPane().add(FondoRecibido, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 220, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        MenuPrincipal jfmain = new MenuPrincipal();
        jfmain.show(); //Mostrar MenuPrincipal
        dispose(); //Cerrar Facturacion
    }//GEN-LAST:event_BackActionPerformed

    /*
     * Configura la tabla de detalles de facturación.
     */
    private void configurarTablaDetalles() {
        modeloTabla = new DefaultTableModel(new Object[]{"Código Artículo", "Cantidad", "Precio Unitario", "Total"}, 0);
        jTable2.setModel(modeloTabla);
    }
    
    /*
     * Limpia todos los campos de entrada y resetea la tabla de detalles.
     */
    private void limpiarCampos() {
        TextFieldNumero.setText("");
        TextFieldCliente.setText("");
        TextFieldRecibido.setText("");
        ComboBoxEstado.setSelectedIndex(0);
        detalles.clear();
        modeloTabla.setRowCount(0); // Limpia la tabla
    }
    
    /*
     * Calcula el subtotal de la factura sumando los totales de los detalles.
     *
     * @return el subtotal de la factura.
     */
    private int calcularSubtotal() {
        int subtotal = 0;
        for (DetalleFactura detalle : detalles) {
            subtotal += detalle.getTotal();
        }
        return subtotal;
    }
    
    /*
     * Maneja la acción del botón de anular factura.
     * Busca la factura por número y cambia su estado a "Anulado" si no está ya anulada.
     *
     * @param evento de acción.
     */
    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        try {
            int numeroFactura = Integer.parseInt(TextFieldNumero.getText());
            Facturación factura = Facturación.buscarFactura(numeroFactura); // para buscar la factura que se desea eliminar
            // si la factura existe y ademas no esta ya anulada
            if (factura != null && factura.getEstado() != Facturación.EstadoFacturación.ANULADO) {
                int confirmacion = JOptionPane.showConfirmDialog(this,
                    "¿Está seguro de que desea anular la factura con número " + numeroFactura + "?",
                    "Confirmar anulación",
                    JOptionPane.YES_NO_OPTION);
                //confirmacion
                if (confirmacion == JOptionPane.YES_OPTION) {
                    Facturación.anularFactura(numeroFactura);
                    ComboBoxEstado.setSelectedItem(Facturación.EstadoFacturación.ANULADO.toString());
                    JOptionPane.showMessageDialog(this, "Factura anulada correctamente.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Factura no encontrada o ya está anulada.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al anular factura: " + e.getMessage());
        }
    }//GEN-LAST:event_ModificarActionPerformed

    private void TextFieldClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldClienteActionPerformed

    
   /*
     * Maneja la acción del botón para agregar un detalle a la factura.
     *
     * @param evento de acción.
     */    
    private void AgregarDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarDetalleActionPerformed
        try {
            int codigoArticulo = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el código del artículo:"));
            int cantidad = Integer.parseInt(JOptionPane.showInputDialog("Ingrese la cantidad:"));
            int precioUnitario = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el precio unitario:"));
            int total = cantidad * precioUnitario;

            // Crear detalle
            DetalleFactura detalle = new DetalleFactura(codigoArticulo, 0, cantidad, precioUnitario, total);
            detalles.add(detalle);

            // Agregar a la tabla
            modeloTabla.addRow(new Object[]{codigoArticulo, cantidad, precioUnitario, total});
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al agregar detalle: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_AgregarDetalleActionPerformed

    private void TextFieldNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldNumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldNumeroActionPerformed

    
    /*
     * Maneja la acción del botón para buscar una factura por su número.
     *
     * @param evento de acción.
     */
    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        try {
            // usando el codigo se utiliza el metodo de buscar para encontrar la factura
            int numeroFactura = Integer.parseInt(TextFieldNumero.getText());
            Facturación factura = Facturación.buscarFactura(numeroFactura);
            
            // si la factura existe entonces pone los valores en los campos de la factura que se busco.
            if (factura != null) {
                TextFieldCliente.setText(String.valueOf(factura.getCodigoCliente()));
                TextFieldRecibido.setText(factura.getFechaRecibido());
                if (factura.getEstado() == Facturación.EstadoFacturación.VALIDO) {
                    ComboBoxEstado.setSelectedItem("Válido");
                } else if (factura.getEstado() == Facturación.EstadoFacturación.ANULADO) {
                    ComboBoxEstado.setSelectedItem("Anulado");
                }
                TextoSubtotal.setText(String.valueOf(factura.getSubtotal()));
                TextoImpuesto.setText(String.valueOf(factura.getImpuesto()));
                Texto1.setText(String.valueOf(factura.getTotal()));
                JOptionPane.showMessageDialog(this, "Factura encontrada.");
            } else {
                JOptionPane.showMessageDialog(this, "Factura no encontrada.", "Error", JOptionPane.ERROR_MESSAGE);
                limpiarCampos();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al buscar factura: " + e.getMessage());
        }
    }//GEN-LAST:event_BuscarActionPerformed

   /*
     * Maneja la acción del botón para agregar una factura.
     *
     * @param evt evento de acción.
     */
    private void AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarActionPerformed
        try {
            // Validar
            if (TextFieldRecibido.getText().isEmpty() || TextFieldCliente.getText().isEmpty() || 
                TextoSubtotal.getText().isEmpty() || TextoImpuesto.getText().isEmpty() || 
                Texto1.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (!TextFieldNumero.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, 
                    "El campo de código no debe tener un valor al agregar una factura. Se genera automáticamente.",
                    "Error en el código",
                    JOptionPane.ERROR_MESSAGE);
                return; // Salir del método
            }
            if (modeloTabla.getRowCount() == 0) {
               JOptionPane.showMessageDialog(this, "Debe agregar al menos un detalle a la factura.", "Error", JOptionPane.ERROR_MESSAGE);
               return;
           }           

            // Generar número de factura automáticamente y conseguir todos los valores de los campos
            int numeroFactura = Facturación.generarNumeroFactura();
            int codigoCliente = Integer.parseInt(TextFieldCliente.getText());
            String fechaRecibido = TextFieldRecibido.getText();
            Facturación.EstadoFacturación estado = Facturación.EstadoFacturación.VALIDO;
            int subtotal = calcularSubtotal();
            int impuesto = (int) (subtotal * 0.13);
            int total = subtotal + impuesto;

            //se crea la factura y se llama al metodo de agregar
            Facturación nuevaFactura = new Facturación(numeroFactura, codigoCliente, fechaRecibido, estado, subtotal, impuesto, total, detalles);
            Facturación.agregarFactura(nuevaFactura);

            JOptionPane.showMessageDialog(this, "Factura agregada correctamente.");
            limpiarCampos();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al agregar factura: " + e.getMessage());
        }
    }//GEN-LAST:event_AgregarActionPerformed

    private void TextFieldRecibidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldRecibidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldRecibidoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Facturacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Facturacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Facturacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Facturacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Facturacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Agregar;
    private javax.swing.JButton AgregarDetalle;
    private javax.swing.JButton Back;
    private javax.swing.JButton Buscar;
    private javax.swing.JLabel Cliente;
    private javax.swing.JComboBox<String> ComboBoxEstado;
    private javax.swing.JLabel Detalle;
    private javax.swing.JLabel Estado;
    private javax.swing.JLabel FacturacionLogo;
    private javax.swing.JLabel FechaRec;
    private javax.swing.JLabel FondoCliente;
    private javax.swing.JLabel FondoFactura;
    private javax.swing.JLabel FondoImpuesto;
    private javax.swing.JLabel FondoRecibido;
    private javax.swing.JLabel FondoSubtotal;
    private javax.swing.JLabel FondoTotal;
    private javax.swing.JLabel Impuesto;
    private javax.swing.JLabel Linea;
    private javax.swing.JLabel LineaHorizontal1;
    private javax.swing.JLabel LineaHorizontal2;
    private javax.swing.JLabel LogoCicloTEC;
    private javax.swing.JButton Modificar;
    private javax.swing.JLabel NoFactura;
    private javax.swing.JLabel Registro;
    private javax.swing.JLabel Subtotal;
    private javax.swing.JTextField TextFieldCliente;
    private javax.swing.JTextField TextFieldNumero;
    private javax.swing.JTextField TextFieldRecibido;
    private javax.swing.JLabel Texto1;
    private javax.swing.JLabel TextoImpuesto;
    private javax.swing.JLabel TextoSubtotal;
    private javax.swing.JLabel Total;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
